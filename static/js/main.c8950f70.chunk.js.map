{"version":3,"sources":["components/List/List.jsx","components/Details/Details.jsx","App.js","reportWebVitals.js","index.js"],"names":["List","props","onDetails","useState","people","setPeople","useEffect","fetch","then","response","json","data","e","console","log","className","map","el","id","onClick","name","Details","info","details","setDetails","isLoading","setLoading","src","avatar","alt","city","company","position","App","activePerson","setActivePerson","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAGe,SAASA,EAAKC,GAAQ,IAC1BC,EAAaD,EAAbC,UADyB,EAELC,mBAAS,IAFJ,mBAEzBC,EAFyB,KAElBC,EAFkB,KAiBhC,OAbAC,qBAAU,WACN,IAEIC,MAAM,kHACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAEN,EAAUM,MAE1B,MAAOC,GAEHC,QAAQC,IAAIF,MAEjB,IAGC,qBAAKG,UAAU,OAAf,SACKX,EAAOY,KAAI,SAAAC,GAAE,OAAI,qBAAiBF,UAAU,SAASG,GAAID,EAAGC,GAAIC,QAAS,kBAAKjB,EAAUe,IAAvE,SAA6EA,EAAGG,MAAtEH,EAAGC,S,MCnB5B,SAASG,EAAQpB,GAAQ,IAC7BqB,EAAQrB,EAARqB,KAD4B,EAELnB,mBAAS,MAFJ,mBAE5BoB,EAF4B,KAEnBC,EAFmB,OAGJrB,oBAAS,GAHL,mBAG5BsB,EAH4B,KAGlBC,EAHkB,KAwBnC,OAnBApB,qBAAW,WACP,GAAGgB,EACH,CACII,GAAW,GACX,IACInB,MAAM,uGAAD,OAAwGe,EAAKJ,GAA7G,UACJV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFa,EAAWb,GACXe,GAAW,MAGnB,MAAOd,GACHC,QAAQC,IAAIF,GACZc,GAAW,OAGpB,CAACJ,IAGA,sBAAKP,UAAU,gBAAf,UACKU,EAAY,qBAAKV,UAAU,UAAf,wBAA4C,KACxDQ,EACG,qCACA,qBAAKR,UAAU,cAAcY,IAAKJ,EAAQK,OAAQC,IAAI,WACtD,qBAAKd,UAAU,aAAf,SAA6BQ,EAAQH,OACrC,sBAAKL,UAAU,iBAAf,mBAAuCQ,EAAQA,QAAQO,QACvD,sBAAKf,UAAU,oBAAf,sBAA6CQ,EAAQA,QAAQQ,WAC7D,sBAAKhB,UAAU,qBAAf,uBAA+CQ,EAAQA,QAAQS,eAEjE,Q,MCjBCC,MAhBf,WAAgB,IAAD,EAE2B9B,mBAAS,MAFpC,mBAEN+B,EAFM,KAEQC,EAFR,KAQb,OACE,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,CAAMb,UANU,SAACoB,GACnBa,EAAgBb,MAMd,cAAC,EAAD,CAASA,KAAMY,QCJNE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c8950f70.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\nimport './List.css';\n\nexport default function List(props) {\n    const {onDetails} = props;\n    const [people,setPeople] = useState([]);\n\n    useEffect(() => {\n        try \n        {\n            fetch('https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/users.json')\n            .then(response => response.json())\n            .then(data=>setPeople(data))\n        }\n        catch (e)\n        {\n            console.log(e);\n        }\n    }, [])\n \n    return (\n        <div className=\"List\">\n            {people.map(el => <div key={el.id} className=\"Person\" id={el.id} onClick={()=> onDetails(el)}>{el.name}</div>)}\n        </div>\n    )\n}","import { useEffect, useState } from \"react\";\nimport './Details.css';\n\nexport default function Details(props) {\n    const {info} = props;\n    const [details, setDetails] = useState(null);\n    const [isLoading,setLoading] = useState(false);\n\n    useEffect( ()=> {\n        if(info)\n        {\n            setLoading(true);\n            try {\n                fetch(`https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/${info.id}.json`)\n                .then(response => response.json())\n                .then(data=> {\n                    setDetails(data);\n                    setLoading(false);\n                });\n            }\n            catch (e) {\n                console.log(e);\n                setLoading(false);\n            }\n        }\n    }, [info])\n\n    return(\n        <div className=\"PersonDetails\">\n            {isLoading ? <div className=\"Loading\">Loading...</div> : null}\n            {details ? \n                <>\n                <img className=\"PersonPhoto\" src={details.avatar} alt='avatar'></img>\n                <div className=\"PersonName\">{details.name}</div>\n                <div className=\"PersonCity Det\">City: {details.details.city}</div>\n                <div className=\"PersonCompany Det\">Company: {details.details.company}</div>\n                <div className=\"PersonPosition Det\">Position: {details.details.position}</div>\n                </>\n            : null }\n        </div>\n    )\n}","import List from './components/List/List';\nimport Details from './components/Details/Details';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [activePerson, setActivePerson] = useState(null);\n\n  const openDetails = (info) => {\n    setActivePerson(info);\n  }\n\n  return (\n    <div className=\"App\">\n      <List onDetails={openDetails}/>\n      <Details info={activePerson} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}